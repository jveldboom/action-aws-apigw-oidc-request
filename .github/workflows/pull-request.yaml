name: pull-request

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: cd src && yarn install

      - name: Lint
        run: cd src && yarn lint

      - name: Unit test
        run: cd src && yarn test

      - name: Rebuild the dist/ directory
        run: cd src && yarn build

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol ./dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build within the ./dist directory"
            exit 1
          fi

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: CloudFormation Linter
        run: |
          pip install cfn-lint
          shopt -s globstar # enable globbing
          cfn-lint -t ./examples/*.yaml

      - name: GitHub Workflow Linter
        run: docker run --rm -v "$(pwd)":/repo --workdir /repo rhysd/actionlint:latest -color

  integration-test:
    runs-on: ubuntu-latest
    needs: [ test ]

    permissions:
      id-token: write # required for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS API Gateway Request
        id: api-request
        uses: ./
        with:
          aws-role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: us-east-1
          url: ${{ secrets.AWS_APIGW_ENDPOINT }}/live/auth/iam
          # payload: "{}"
          method: GET
          headers: |
            content-type: application/json
          # max-retries: 3

      - name: Test API Response
        uses: actions/github-script@v6

        with:
          script: |
            const statusCode = '${{ steps.api-request.outputs.status-code }}'
            const headers = JSON.parse('${{ steps.api-request.outputs.headers }}')
            const body = JSON.parse('${{ steps.api-request.outputs.body }}')

            if (statusCode !== '200') core.setFailed('status code did not equal 200')
            if (Object.keys(headers).length < 6) core.setFailed('headers key length was less than expected')
            if (body.msg !== 'Hello from API Gateway') core.setFailed('body did not have expected msg')
