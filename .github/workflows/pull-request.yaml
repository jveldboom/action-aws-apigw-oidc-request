name: pull-request

on:
  pull_request:
  push:
    branches:
      - jveldboom/test-outputs

jobs:
  unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Unit test
        run: yarn test

      - name: Rebuild the dist/ directory
        run: yarn build

      - name: Compare the expected and actual dist/ directories
        run: |
          if [ "$(git diff --ignore-space-at-eol ../dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build within the ./dist directory"
            exit 1
          fi

  integration-test:
    runs-on: ubuntu-latest
    needs: [ unit-test ]

    permissions:
      id-token: write # required for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: AWS API Gateway Request
        id: api-request
        uses: ./
        with:
          aws-role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: us-east-1
          url: ${{ secrets.AWS_APIGW_ENDPOINT }}/live/auth/iam
          # payload: "{}"
          method: GET
          headers: |
            content-type: application/json
          # max-retries: 3

      - name: Test API Response
        uses: actions/github-script@v6

        with:
          script: |
            const outputs = {
              statusCode: '${{ steps.api-request.outputs.status-code }}',
              headers: '${{ steps.api-request.outputs.headers }}',
              body: '${{ steps.api-request.outputs.body }}'
            }

            core.info(JSON.stringify(outputs, null, 2))

            const testFailures = []
            if (statusCode !== '200') testFailures.push(`status-code: ${statusCode}`)
            if (headers.length < 5) testFailures.push(`headers: ${JSON.stringify(headers)}`)
            if (body.length < 5) testFailures.push(`body: ${JSON.stringify(body)}`)

            if (testFailures.length !== 0) core.setFailed(testFailures.join('\n'))
